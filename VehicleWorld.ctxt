#BlueJ class context
comment0.target=VehicleWorld
comment0.text=\r\n\ Credits\:\r\n\ Sound\:\r\n\ Sound\ for\ Car\ class\:\ 4k.wav\ and\ vroom.wav\ is\ by\ me\r\n\ Sound\ for\ User\ class\:\ exorcist_8.wav\ and\ exorcist_vroom.wav\ by\ me\r\n\ Sound\ for\ Boom\ class\:\ Grenade\ Explosion-SoundBible.com-2100581469.wav\ by\ Mike\ Koenig\ from\ webiste\ https\://soundbible.com/1467-Grenade-Explosion.html\r\n\ Sound\ for\ Bus\ class\:\ bus.wav\ by\ SFX\ from\ https\://www.youtube.com/watch?v\=gsjG87p3DCI\ edited\ by\ me\r\n\ Sound\ for\ Vehicle\ class\:\ Horn\ Honk-SoundBible.com-1162546405.wav\ by\ Mike\ Koenig\ from\ https\://soundbible.com/1048-Horn-Honk.html\r\n\ Sound\ for\ Lightning\ class\:\ Thunder-Mike_Koenig-315681025.wav\ by\ Mike\ Koenig\ from\ https\://soundbible.com/1907-Thunder.html\r\n\ Images\:\r\n\ Image\ for\ Boom\ class\:\ explosion_Boom_2.png\ by\ Sogomn\ from\ https\://opengameart.org/content/explosion-3\r\n\ Image\ for\ User\ class\:\ car01.png\ by\ me\r\n
comment1.params=
comment1.target=VehicleWorld()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyWorld.\r\n\ \r\n
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=boolean\ ChangeLaneNow()
comment4.params=x\ y
comment4.target=void\ change(double,\ double)
comment5.params=
comment5.target=void\ spawn()
comment6.params=lane
comment6.target=int\ getLaneY(int)
comment6.text=\r\n\ \ Given\ a\ lane\ number\ (zero-indexed),\ return\ the\ y\ position\r\n\ \ in\ the\ centre\ of\ the\ lane.\ (doesn't\ factor\ offset,\ so\ \r\n\ \ watch\ your\ offset,\ i.e.\ with\ Bus).\r\n\ \ \r\n\ \ @param\ lane\ the\ lane\ number\ (zero-indexed)\r\n\ \ @return\ int\ the\ y\ position\ of\ the\ lane's\ center,\ or\ -1\ if\ invalid\r\n
comment7.params=y
comment7.target=int\ getLane(int)
comment7.text=\r\n\ Given\ a\ y-position,\ return\ the\ lane\ number\ (zero-indexed).\r\n\ Note\ that\ the\ y-position\ must\ be\ valid,\ and\ you\ should\ \r\n\ include\ the\ offset\ in\ your\ calculations\ before\ calling\ this\ method.\r\n\ For\ example,\ if\ a\ Bus\ is\ in\ a\ lane\ at\ y\=100,\ but\ is\ offset\ by\ -20,\r\n\ it\ is\ actually\ in\ the\ lane\ located\ at\ y\=80,\ so\ you\ should\ send\r\n\ 80\ to\ this\ method,\ not\ 100.\r\n\ \r\n\ @param\ y\ -\ the\ y\ position\ of\ the\ lane\ the\ Vehicle\ is\ in\r\n\ @return\ int\ the\ lane\ number,\ zero-indexed\r\n\ \r\n
comment8.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit\ centreSpacing
comment8.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean,\ int)
comment9.params=world\ target\ spawners\ startY\ heightPerLane\ lanes\ spacing\ twoWay\ centreSplit
comment9.target=int[]\ prepareLanes(greenfoot.World,\ greenfoot.GreenfootImage,\ VehicleSpawner[],\ int,\ int,\ int,\ int,\ boolean,\ boolean)
comment9.text=\r\n\ <p>The\ prepareLanes\ method\ is\ a\ static\ (standalone)\ method\ that\ takes\ a\ list\ of\ parameters\ about\ the\ desired\ roadway\ and\ then\ builds\ it.</p>\r\n\ \r\n\ <p><b>Note\:</b>\ So\ far,\ Centre-split\ is\ the\ only\ option,\ regardless\ of\ what\ values\ you\ send\ for\ that\ parameters.</p>\r\n\r\n\ <p>This\ method\ does\ three\ things\:</p>\r\n\ <ul>\r\n\ \ <li>\ Determines\ the\ Y\ coordinate\ for\ each\ lane\ (each\ lane\ is\ centered\ vertically\ around\ the\ position)</li>\r\n\ \ <li>\ Draws\ lanes\ onto\ the\ GreenfootImage\ target\ that\ is\ passed\ in\ at\ the\ specified\ /\ calculated\ positions.\ \r\n\ \ \ \ \ \ \ (Nothing\ is\ returned,\ it\ just\ manipulates\ the\ object\ which\ affects\ the\ original).</li>\r\n\ \ <li>\ Places\ the\ VehicleSpawners\ (passed\ in\ via\ the\ array\ parameter\ spawners)\ into\ the\ World\ (also\ passed\ in\ via\ parameters).</li>\r\n\ </ul>\r\n\ \r\n\ <p>\ After\ this\ method\ is\ run,\ there\ is\ a\ visual\ road\ as\ well\ as\ the\ objects\ needed\ to\ spawn\ Vehicles.\ Examine\ the\ table\ below\ for\ an\r\n\ in-depth\ description\ of\ what\ the\ roadway\ will\ look\ like\ and\ what\ each\ parameter/component\ represents.</p>\r\n\ \r\n\ <pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <\=\=\=\ Start\ Y\r\n\ \ ||||||||||||||\ \ <\=\=\=\ Top\ Border\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[0]\ \ |\ \ <\=\=\=\ Lane\ Position\ (Y)\ is\ the\ middle\ of\ the\ lane\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ [\#\#]\ [\#\#]\ [\#\#|\ <\=\=\ spacing\ (\ where\ the\ lane\ lines\ or\ borders\ are\ )\r\n\ \ /------------\\\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\ \ \r\n\ \ |\ \ \ \ \ \ Y[1]\ \ |\r\n\ \ |\ \ \ \ \ \ \ \ \ \ \ \ |\r\n\ \ \\------------/\r\n\ \ ||||||||||||||\ \ <\=\=\ Bottom\ Border\r\n\ </pre>\r\n\ \r\n\ @param\ world\ \ \ \ \ The\ World\ that\ the\ VehicleSpawners\ will\ be\ added\ to\r\n\ @param\ target\ \ \ \ The\ GreenfootImage\ that\ the\ lanes\ will\ be\ drawn\ on,\ usually\ but\ not\ necessarily\ the\ background\ of\ the\ World.\r\n\ @param\ spawners\ \ An\ array\ of\ VehicleSpawner\ to\ be\ added\ to\ the\ World\r\n\ @param\ startY\ \ \ \ The\ top\ Y\ position\ where\ lanes\ (drawing)\ should\ start\r\n\ @param\ heightPerLane\ The\ height\ of\ the\ desired\ lanes\r\n\ @param\ lanes\ \ \ \ \ The\ total\ number\ of\ lanes\ desired\r\n\ @param\ spacing\ \ \ The\ distance,\ in\ pixels,\ between\ each\ lane\r\n\ @param\ twoWay\ \ \ \ Should\ traffic\ flow\ both\ ways?\ Leave\ false\ for\ a\ one-way\ street\ (Not\ Yet\ Implemented)\r\n\ @param\ centreSplit\ \ \ Should\ the\ whole\ road\ be\ split\ in\ the\ middle?\ Or\ lots\ of\ parallel\ two-way\ streets?\ Must\ also\ be\ two-way\ street\ (twoWay\ \=\=\ true)\ or\ else\ NO\ EFFECT\r\n\ \r\n
numComments=10
