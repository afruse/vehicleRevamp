#BlueJ class context
comment0.target=Sonic
comment0.text=\ Sonic\ library\r\n\ \ \ Copyright\ 2010,\ 2011\r\n\ \ \ Bill\ Cox\r\n\ \ \ This\ file\ is\ part\ of\ the\ Sonic\ Library.\r\n\ \ \ This\ file\ is\ licensed\ under\ the\ Apache\ 2.0\ license.\r\n
comment1.params=oldArray\ newLength
comment1.target=short[]\ resize(short[],\ int)
comment10.params=
comment10.target=boolean\ getChordPitch()
comment11.params=useChordPitch
comment11.target=void\ setChordPitch(boolean)
comment12.params=
comment12.target=int\ getQuality()
comment13.params=quality
comment13.target=void\ setQuality(int)
comment14.params=
comment14.target=float\ getVolume()
comment15.params=volume
comment15.target=void\ setVolume(float)
comment16.params=sampleRate\ numChannels
comment16.target=void\ allocateStreamBuffers(int,\ int)
comment17.params=sampleRate\ numChannels
comment17.target=Sonic(int,\ int)
comment18.params=
comment18.target=int\ getSampleRate()
comment19.params=sampleRate
comment19.target=void\ setSampleRate(int)
comment2.params=dest\ destPos\ source\ sourcePos\ numSamples
comment2.target=void\ move(short[],\ int,\ short[],\ int,\ int)
comment20.params=
comment20.target=int\ getNumChannels()
comment21.params=numChannels
comment21.target=void\ setNumChannels(int)
comment22.params=numSamples
comment22.target=void\ enlargeOutputBufferIfNeeded(int)
comment23.params=numSamples
comment23.target=void\ enlargeInputBufferIfNeeded(int)
comment24.params=samples\ numSamples
comment24.target=void\ addFloatSamplesToInputBuffer(float[],\ int)
comment25.params=samples\ numSamples
comment25.target=void\ addShortSamplesToInputBuffer(short[],\ int)
comment26.params=samples\ numSamples
comment26.target=void\ addUnsignedByteSamplesToInputBuffer(byte[],\ int)
comment27.params=inBuffer\ numBytes
comment27.target=void\ addBytesToInputBuffer(byte[],\ int)
comment28.params=position
comment28.target=void\ removeInputSamples(int)
comment29.params=samples\ position\ numSamples
comment29.target=void\ copyToOutput(short[],\ int,\ int)
comment3.params=samples\ position\ numSamples\ volume
comment3.target=void\ scaleSamples(short[],\ int,\ int,\ float)
comment30.params=position
comment30.target=int\ copyInputToOutput(int)
comment31.params=samples\ maxSamples
comment31.target=int\ readFloatFromStream(float[],\ int)
comment32.params=samples\ maxSamples
comment32.target=int\ readShortFromStream(short[],\ int)
comment33.params=samples\ maxSamples
comment33.target=int\ readUnsignedByteFromStream(byte[],\ int)
comment34.params=outBuffer\ maxBytes
comment34.target=int\ readBytesFromStream(byte[],\ int)
comment35.params=
comment35.target=void\ flushStream()
comment36.params=
comment36.target=int\ samplesAvailable()
comment37.params=samples\ position\ skip
comment37.target=void\ downSampleInput(short[],\ int,\ int)
comment38.params=samples\ position\ minPeriod\ maxPeriod
comment38.target=int\ findPitchPeriodInRange(short[],\ int,\ int,\ int)
comment39.params=minDiff\ maxDiff\ preferNewPeriod
comment39.target=boolean\ prevPeriodBetter(int,\ int,\ boolean)
comment4.params=
comment4.target=float\ getSpeed()
comment40.params=samples\ position\ preferNewPeriod
comment40.target=int\ findPitchPeriod(short[],\ int,\ boolean)
comment41.params=numSamples\ numChannels\ out\ outPos\ rampDown\ rampDownPos\ rampUp\ rampUpPos
comment41.target=void\ overlapAdd(int,\ int,\ short[],\ int,\ short[],\ int,\ short[],\ int)
comment42.params=numSamples\ numChannels\ separation\ out\ outPos\ rampDown\ rampDownPos\ rampUp\ rampUpPos
comment42.target=void\ overlapAddWithSeparation(int,\ int,\ int,\ short[],\ int,\ short[],\ int,\ short[],\ int)
comment43.params=originalNumOutputSamples
comment43.target=void\ moveNewSamplesToPitchBuffer(int)
comment44.params=numSamples
comment44.target=void\ removePitchSamples(int)
comment45.params=originalNumOutputSamples
comment45.target=void\ adjustPitch(int)
comment46.params=i\ ratio\ width
comment46.target=int\ findSincCoefficient(int,\ int,\ int)
comment47.params=value
comment47.target=int\ getSign(int)
comment48.params=in\ inPos\ oldSampleRate\ newSampleRate
comment48.target=short\ interpolate(short[],\ int,\ int,\ int)
comment49.params=rate\ originalNumOutputSamples
comment49.target=void\ adjustRate(float,\ int)
comment5.params=speed
comment5.target=void\ setSpeed(float)
comment50.params=samples\ position\ speed\ period
comment50.target=int\ skipPitchPeriod(short[],\ int,\ float,\ int)
comment51.params=samples\ position\ speed\ period
comment51.target=int\ insertPitchPeriod(short[],\ int,\ float,\ int)
comment52.params=speed
comment52.target=void\ changeSpeed(float)
comment53.params=
comment53.target=void\ processStreamInput()
comment54.params=samples\ numSamples
comment54.target=void\ writeFloatToStream(float[],\ int)
comment55.params=samples\ numSamples
comment55.target=void\ writeShortToStream(short[],\ int)
comment56.params=samples\ numSamples
comment56.target=void\ writeUnsignedByteToStream(byte[],\ int)
comment57.params=inBuffer\ numBytes
comment57.target=void\ writeBytesToStream(byte[],\ int)
comment58.params=samples\ numSamples\ speed\ pitch\ rate\ volume\ useChordPitch\ sampleRate\ numChannels
comment58.target=int\ changeFloatSpeed(float[],\ int,\ float,\ float,\ float,\ float,\ boolean,\ int,\ int)
comment59.params=samples\ numSamples\ speed\ pitch\ rate\ volume\ useChordPitch\ sampleRate\ numChannels
comment59.target=int\ sonicChangeShortSpeed(short[],\ int,\ float,\ float,\ float,\ float,\ boolean,\ int,\ int)
comment59.text=This\ is\ a\ non-stream\ oriented\ interface\ to\ just\ change\ the\ speed\ of\ a\ sound\ sample
comment6.params=
comment6.target=float\ getPitch()
comment7.params=pitch
comment7.target=void\ setPitch(float)
comment8.params=
comment8.target=float\ getRate()
comment9.params=rate
comment9.target=void\ setRate(float)
numComments=60
